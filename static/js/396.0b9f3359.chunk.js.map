{"version":3,"file":"static/js/396.0b9f3359.chunk.js","mappings":"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","sources":["components/Todo/EditForm/EditForm.jsx","components/Props/BlogCard/BlogCard.styled.js","components/Props/BlogCard/BlogCard.jsx","helpers/formateDate.js","components/Container/Container.styled.js","components/Section/Section.styled.js","components/Props/StatisticsItem/StatisticsItem.jsx","components/Props/Statistics/Statistics.jsx","components/Todo/ToDoForm/ToDoForm.jsx","pages/Props/Props.jsx","redux/selectors.js"],"sourcesContent":["import { RiSaveLine } from 'react-icons/ri';\nimport { MdOutlineCancel } from 'react-icons/md';\nimport { editTodo } from '../../../redux/operations';\nimport { useDispatch } from 'react-redux';\n\nexport const EditForm = ({ defaultValue, updateTodo, id }) => {\n  const dispatch = useDispatch();\n  const onSubmit = e => {\n    e.preventDefault();\n    const { value } = e.target.elements.text;\n    dispatch(editTodo({ id, text: value }));\n  };\n  console.log(defaultValue);\n  return (\n    <form onSubmit={onSubmit} style={{ marginBottom: 20 }}>\n      <textarea\n        defaultValue={defaultValue}\n        name=\"text\"\n        type=\"text\"\n        style={{ width: '500px', height: '150px', resize: 'none' }}\n        required\n      />\n      <button type=\"submit\">\n        <RiSaveLine size={16} color={'green'} />\n      </button>\n      <button type=\"button\">\n        <MdOutlineCancel size={16} color={'red'} />\n      </button>\n    </form>\n  );\n};\n//  onClick={() => cancelEdit()}\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  overflow: hidden;\n  margin: 0 auto;\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n  border-radius: ${({ theme }) => theme.spacing(4)};\n  background-color: ${({ theme }) => theme.colors.white};\n`;\nexport const CardPoster = styled.img`\n  object-fit: cover;\n`;\n\nexport const CardBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(2)};\n  padding: ${({ theme }) => theme.spacing(4)};\n`;\n\nexport const Tag = styled.span`\n  align-self: flex-start;\n  padding: ${({ theme }) => theme.spacing(2)};\n  border-radius: ${({ theme }) => theme.spacing(4)};\n  font-size: ${({ theme }) => theme.spacing(3)};\n  color: ${({ theme }) => theme.colors.white};\n  background: ${({ theme }) => theme.colors.tagBackground};\n`;\n\nexport const CardTitle = styled.h2`\n  font-size: ${({ theme }) => theme.spacing(6)};\n  text-transform: capitalize;\n`;\n\nexport const CardText = styled.p`\n  font-weight: 200;\n  letter-spacing: 0.8px;\n`;\n\nexport const CardFooter = styled.div`\n  display: flex;\n  padding: ${({ theme }) => theme.spacing(4)};\n  margin-top: auto;\n`;\n\nexport const UserBox = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing(2)};\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n`;\n\nexport const UserName = styled.h3`\n  font-size: 14px;\n  margin-bottom: ${({ theme }) => theme.spacing(1)};\n`;\n\nexport const Date = styled.span`\n  color: ${({ theme }) => theme.colors.gray};\n`;\n","import { formateDateToNow } from 'helpers/formateDate';\nimport {\n  Avatar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardPoster,\n  CardText,\n  CardTitle,\n  Date,\n  Tag,\n  UserBox,\n  UserName,\n} from './BlogCard.styled';\n\nexport const BlogCard = ({\n  name,\n  description,\n  title,\n  poster,\n  tag,\n  avatar,\n  postedAt,\n}) => {\n  return (\n    <Card>\n      <CardPoster src={poster} alt={tag} />\n      <CardBody>\n        <Tag>{tag}</Tag>\n        <CardTitle>{title}</CardTitle>\n        <CardText>{description}</CardText>\n      </CardBody>\n      <CardFooter>\n        <UserBox>\n          <Avatar src={avatar} alt={name} />\n          <div>\n            <UserName>{name}</UserName>\n            <Date>{formateDateToNow(postedAt)}</Date>\n          </div>\n        </UserBox>\n      </CardFooter>\n    </Card>\n  );\n};\n","import { formatDistanceToNow } from 'date-fns';\n\nexport const formateDateToNow = date => {\n  return formatDistanceToNow(new Date(date), { addSuffix: true });\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-top: ${({ theme }) => theme.spacing(5)};\n  padding-left: ${({ theme }) => theme.spacing(5)};\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: ${({ theme }) => theme.spacing(20)};\n  padding-bottom: ${({ theme }) => theme.spacing(10)};\n`;\n","export const StatisticsItem = ({ title, total }) => {\n  return (\n    <li>\n      <p>{title}</p>\n      <p>{total}</p>\n    </li>\n  );\n};\n","import { StatisticsItem } from 'components/Props/StatisticsItem/StatisticsItem';\n\nexport const Statistics = ({ statistics, title }) => {\n  return (\n    <div>\n      {title && <h2>{title}</h2>}\n      <ul>\n        {statistics.map(element => (\n          <StatisticsItem key={element.id} {...element} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTodos } from '../../../redux/selectors';\nimport { addTodo } from '../../../redux/operations';\n\nexport const ToDoForm = ({ text }) => {\n  const [query, setQuery] = useState('');\n\n  const dispatch = useDispatch();\n  const todos = useSelector(selectTodos);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (findTodo(query)) {\n      return;\n    }\n\n    dispatch(addTodo(query));\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setQuery(value);\n  };\n\n  const findTodo = text => {\n    const isExist = todos.find(\n      item => item.text.toLowerCase() === text.toLowerCase()\n    );\n\n    if (isExist) {\n      alert(`Todo: ${text} is already exist`);\n    }\n\n    return isExist;\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n      <label>\n        <input\n          value={query}\n          type=\"text\"\n          name=\"query\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button>{text}</button>\n    </form>\n  );\n};\n","import { BlogCard, Container, Section, Statistics } from 'components';\nimport article from 'data/article.json';\nimport statistics from 'data/statistics.json';\n\nconst Props = () => {\n  return (\n    <>\n      <Section>\n        <Container>\n          <BlogCard {...article} />\n          <Statistics statistics={statistics} title=\"Statistics\" />\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default Props;\n","export const selectTodos = state => state.todos;\nexport const selectFilter = state => state.filter;\n"],"names":["EditForm","_ref","defaultValue","id","updateTodo","dispatch","useDispatch","console","log","_jsxs","onSubmit","e","preventDefault","value","target","elements","text","editTodo","style","marginBottom","children","_jsx","name","type","width","height","resize","required","RiSaveLine","size","color","MdOutlineCancel","Card","styled","_templateObject","_taggedTemplateLiteral","theme","shadows","regular","_ref2","spacing","_ref3","colors","white","CardPoster","_templateObject2","CardBody","_templateObject3","_ref4","_ref5","Tag","_templateObject4","_ref6","_ref7","_ref8","_ref9","_ref10","tagBackground","CardTitle","_templateObject5","_ref11","CardText","_templateObject6","CardFooter","_templateObject7","_ref12","UserBox","_templateObject8","_ref13","Avatar","_templateObject9","UserName","_templateObject10","_ref14","Date","_templateObject11","_ref15","gray","BlogCard","date","description","title","poster","tag","avatar","postedAt","src","alt","formatDistanceToNow","addSuffix","Container","Section","StatisticsItem","total","Statistics","statistics","map","element","_objectSpread","ToDoForm","_useState","useState","_useState2","_slicedToArray","query","setQuery","todos","useSelector","selectTodos","findTodo","isExist","find","item","toLowerCase","alert","concat","addTodo","onChange","_Fragment","article","state","selectFilter","filter"],"sourceRoot":""}