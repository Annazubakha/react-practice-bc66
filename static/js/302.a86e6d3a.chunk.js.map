{"version":3,"file":"static/js/302.a86e6d3a.chunk.js","mappings":"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","sources":["components/Form/Form.jsx","components/Modal/Modal.jsx","components/Todo/EditForm/EditForm.jsx","components/Props/BlogCard/BlogCard.styled.js","components/Props/BlogCard/BlogCard.jsx","helpers/formateDate.js","components/Container/Container.styled.js","components/Section/Section.styled.js","components/Props/StatisticsItem/StatisticsItem.jsx","components/Props/Statistics/Statistics.jsx","components/Todo/ToDoForm/ToDoForm.jsx","api/gallery.js","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGalleryList.jsx","pages/ImageGallery/ImageGallery.jsx","redux/selectors.js"],"sourcesContent":["import { useState } from 'react';\n\nexport const Form = ({ addTodo, text }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    addTodo(query);\n\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n      <label>\n        <input\n          value={query}\n          type=\"text\"\n          name=\"query\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button>{text}</button>\n    </form>\n  );\n};\n","import { Backdrop } from 'components/Backdrop/Backdrop.styled';\nimport React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modalRoot');\n\nexport const Modal = ({ closeModal, children }) => {\n  useEffect(() => {\n    const handleEscPress = event => {\n      if (event.code === 'Escape') closeModal();\n    };\n    window.addEventListener('keydown', handleEscPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscPress);\n    };\n  }, [closeModal]);\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>{children}</Backdrop>,\n    modalRoot\n  );\n};\n","import { RiSaveLine } from 'react-icons/ri';\nimport { MdOutlineCancel } from 'react-icons/md';\nimport { editTodo } from '../../../redux/operations';\nimport { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport const EditForm = ({ defaultValue, id, cancelEdit }) => {\n  const dispatch = useDispatch();\n  const onSubmit = e => {\n    e.preventDefault();\n    const { value } = e.target.elements.text;\n    dispatch(editTodo({ id, text: value }))\n      .unwrap()\n      .then(() => {\n        Notify.success('ToDo update');\n      })\n      .catch(() => {\n        Notify.error('Something went wrong');\n      })\n      .finally(() => {\n        cancelEdit(false);\n      });\n  };\n\n  return (\n    <form onSubmit={onSubmit} style={{ marginBottom: 20 }}>\n      <textarea\n        defaultValue={defaultValue}\n        name=\"text\"\n        type=\"text\"\n        style={{ width: '500px', height: '150px', resize: 'none' }}\n        required\n      />\n      <button type=\"submit\">\n        <RiSaveLine size={30} color={'green'} />\n      </button>\n      <button type=\"button\" onClick={() => cancelEdit(false)}>\n        <MdOutlineCancel size={30} color={'red'} />\n      </button>\n    </form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  overflow: hidden;\n  margin: 0 auto;\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n  border-radius: ${({ theme }) => theme.spacing(4)};\n  background-color: ${({ theme }) => theme.colors.white};\n`;\nexport const CardPoster = styled.img`\n  object-fit: cover;\n`;\n\nexport const CardBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(2)};\n  padding: ${({ theme }) => theme.spacing(4)};\n`;\n\nexport const Tag = styled.span`\n  align-self: flex-start;\n  padding: ${({ theme }) => theme.spacing(2)};\n  border-radius: ${({ theme }) => theme.spacing(4)};\n  font-size: ${({ theme }) => theme.spacing(3)};\n  color: ${({ theme }) => theme.colors.white};\n  background: ${({ theme }) => theme.colors.tagBackground};\n`;\n\nexport const CardTitle = styled.h2`\n  font-size: ${({ theme }) => theme.spacing(6)};\n  text-transform: capitalize;\n`;\n\nexport const CardText = styled.p`\n  font-weight: 200;\n  letter-spacing: 0.8px;\n`;\n\nexport const CardFooter = styled.div`\n  display: flex;\n  padding: ${({ theme }) => theme.spacing(4)};\n  margin-top: auto;\n`;\n\nexport const UserBox = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing(2)};\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n`;\n\nexport const UserName = styled.h3`\n  font-size: 14px;\n  margin-bottom: ${({ theme }) => theme.spacing(1)};\n`;\n\nexport const Date = styled.span`\n  color: ${({ theme }) => theme.colors.gray};\n`;\n","import { formateDateToNow } from 'helpers/formateDate';\nimport {\n  Avatar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardPoster,\n  CardText,\n  CardTitle,\n  Date,\n  Tag,\n  UserBox,\n  UserName,\n} from './BlogCard.styled';\n\nexport const BlogCard = ({\n  name,\n  description,\n  title,\n  poster,\n  tag,\n  avatar,\n  postedAt,\n}) => {\n  return (\n    <Card>\n      <CardPoster src={poster} alt={tag} />\n      <CardBody>\n        <Tag>{tag}</Tag>\n        <CardTitle>{title}</CardTitle>\n        <CardText>{description}</CardText>\n      </CardBody>\n      <CardFooter>\n        <UserBox>\n          <Avatar src={avatar} alt={name} />\n          <div>\n            <UserName>{name}</UserName>\n            <Date>{formateDateToNow(postedAt)}</Date>\n          </div>\n        </UserBox>\n      </CardFooter>\n    </Card>\n  );\n};\n","import { formatDistanceToNow } from 'date-fns';\n\nexport const formateDateToNow = date => {\n  return formatDistanceToNow(new Date(date), { addSuffix: true });\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-top: ${({ theme }) => theme.spacing(5)};\n  padding-left: ${({ theme }) => theme.spacing(5)};\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: ${({ theme }) => theme.spacing(20)};\n  padding-bottom: ${({ theme }) => theme.spacing(10)};\n`;\n","export const StatisticsItem = ({ title, total }) => {\n  return (\n    <li>\n      <p>{title}</p>\n      <p>{total}</p>\n    </li>\n  );\n};\n","import { StatisticsItem } from 'components/Props/StatisticsItem/StatisticsItem';\n\nexport const Statistics = ({ statistics, title }) => {\n  return (\n    <div>\n      {title && <h2>{title}</h2>}\n      <ul>\n        {statistics.map(element => (\n          <StatisticsItem key={element.id} {...element} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTodos } from '../../../redux/selectors';\nimport { addTodo } from '../../../redux/operations';\n\nexport const ToDoForm = ({ text }) => {\n  const [query, setQuery] = useState('');\n\n  const dispatch = useDispatch();\n  const todos = useSelector(selectTodos);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (findTodo(query)) {\n      return;\n    }\n\n    dispatch(addTodo(query));\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setQuery(value);\n  };\n\n  const findTodo = text => {\n    const isExist = todos.find(\n      item => item.text.toLowerCase() === text.toLowerCase()\n    );\n\n    if (isExist) {\n      alert(`Todo: ${text} is already exist`);\n    }\n\n    return isExist;\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n      <label>\n        <input\n          value={query}\n          type=\"text\"\n          name=\"query\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button>{text}</button>\n    </form>\n  );\n};\n","import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    common: {\n      Authorization:\n        'Client-ID 4dc0c9edd3f8399861773bf78562a506e26384e3c5d582c06359e3e1c4b70c33',\n    },\n  },\n});\n\nexport const getPhotos = async (query, page) => {\n  const params = {\n    query,\n    page,\n    per_page: 20,\n    color: 'black_and_white',\n    orientation: 'portrait',\n  };\n  const { data } = await instance.get('/search/photos', { params });\n  return data;\n};\n","export const ImageGalleryItem = ({ alt, small, full, openModal }) => {\n  return (\n    <li onClick={() => openModal(full)} style={{ flexBasis: '20%' }}>\n      <img src={small} alt={alt} />\n    </li>\n  );\n};\n","import { ImageGalleryItem } from './ImageGalleryItem';\n\nexport const ImageGalleryList = ({ photos, openModal }) => {\n  return (\n    <ul\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 10,\n        justifyContent: 'center',\n      }}\n    >\n      {photos.map(({ id, urls, alt_description }) => (\n        <ImageGalleryItem\n          openModal={openModal}\n          key={id}\n          small={urls.small}\n          alt={alt_description}\n          full={urls.full}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Form } from 'components/Form/Form';\nimport { getPhotos } from 'api/gallery';\nimport { ImageGalleryList } from 'components/ImageGallery/ImageGalleryList';\nimport { Container, Section } from 'components';\nimport { Loader } from 'components/Loader/Loader';\nimport { Modal } from 'components/Modal/Modal';\n\nconst ImageGallery = () => {\n  const [photos, setPhotos] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [isLoadMore, setIsLoadMore] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [largeImgUrl, setLargeImgUrl] = useState('');\n\n  useEffect(() => {\n    if (!query) return;\n\n    setIsLoading(true);\n\n    (async () => {\n      try {\n        const { results, total } = await getPhotos(query, page);\n\n        if (!results.length) {\n          setIsEmpty(true);\n          return;\n        }\n\n        setPhotos(prev => [...prev, ...results]);\n        setIsLoadMore(page < Math.ceil(total / 20));\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [query, page]);\n\n  const handleSubmit = query => {\n    setQuery(query);\n    setIsEmpty(false);\n    setPhotos([]);\n    setPage(1);\n    setError(null);\n  };\n\n  const handleLoadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const handleClickImg = (url = '') => {\n    setLargeImgUrl(url);\n  };\n\n  return (\n    <>\n      <Section>\n        <Container>\n          <Form addTodo={handleSubmit} text=\"Search photos\" />\n          <ImageGalleryList photos={photos} openModal={handleClickImg} />\n          {isLoading && <Loader />}\n          {isLoadMore && (\n            <button onClick={handleLoadMore} type=\"button\">\n              Load more\n            </button>\n          )}\n          {isEmpty && <p>No photos for your query!</p>}\n          {error && <p>Sorry, something went wrong {error}</p>}\n          {largeImgUrl && (\n            <Modal closeModal={handleClickImg}>\n              <img src={largeImgUrl} alt=\"\" width=\"70%\" />\n            </Modal>\n          )}\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default ImageGallery;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectTodos = state => state.todos;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredTodos = createSelector(\n  // Масив вхідних селекторів\n  [selectTodos, selectFilter],\n  // Функція перетворювач\n  (todos, filter) => {\n    return todos.filter(item =>\n      item.text.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n"],"names":["Form","_ref","addTodo","text","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","e","preventDefault","style","marginBottom","children","_jsx","value","type","name","onChange","target","required","modalRoot","document","querySelector","Modal","closeModal","useEffect","handleEscPress","event","code","window","addEventListener","removeEventListener","createPortal","Backdrop","onClick","currentTarget","EditForm","defaultValue","id","cancelEdit","dispatch","useDispatch","elements","editTodo","unwrap","then","Notify","catch","finally","width","height","resize","RiSaveLine","size","color","MdOutlineCancel","Card","styled","_templateObject","_taggedTemplateLiteral","theme","shadows","regular","_ref2","spacing","_ref3","colors","white","CardPoster","_templateObject2","CardBody","_templateObject3","_ref4","_ref5","Tag","_templateObject4","_ref6","_ref7","_ref8","_ref9","_ref10","tagBackground","CardTitle","_templateObject5","_ref11","CardText","_templateObject6","CardFooter","_templateObject7","_ref12","UserBox","_templateObject8","_ref13","Avatar","_templateObject9","UserName","_templateObject10","_ref14","Date","_templateObject11","_ref15","gray","BlogCard","date","description","title","poster","tag","avatar","postedAt","src","alt","formatDistanceToNow","addSuffix","Container","Section","StatisticsItem","total","Statistics","statistics","map","element","_objectSpread","ToDoForm","todos","useSelector","selectTodos","findTodo","isExist","find","item","toLowerCase","alert","concat","instance","axios","baseURL","headers","common","Authorization","getPhotos","_asyncToGenerator","_regeneratorRuntime","_callee","page","params","_yield$instance$get","data","_context","prev","next","per_page","orientation","get","sent","abrupt","stop","_x","_x2","apply","arguments","ImageGalleryItem","small","full","openModal","flexBasis","ImageGalleryList","photos","display","flexWrap","gap","justifyContent","urls","alt_description","setPhotos","_useState3","_useState4","_useState5","_useState6","setPage","_useState7","_useState8","isLoadMore","setIsLoadMore","_useState9","_useState10","isEmpty","setIsEmpty","_useState11","_useState12","error","setError","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","largeImgUrl","setLargeImgUrl","_yield$getPhotos","results","length","_toConsumableArray","Math","ceil","t0","message","finish","handleClickImg","url","undefined","_Fragment","Loader","state","selectFilteredTodos","createSelector","filter","includes"],"sourceRoot":""}