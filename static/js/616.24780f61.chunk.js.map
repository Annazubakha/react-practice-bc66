{"version":3,"file":"static/js/616.24780f61.chunk.js","mappings":"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","sources":["components/Props/BlogCard/BlogCard.styled.js","components/Props/BlogCard/BlogCard.jsx","helpers/formateDate.js","components/Container/Container.styled.js","components/Section/Section.styled.js","components/Props/StatisticsItem/StatisticsItem.jsx","components/Props/Statistics/Statistics.jsx","components/Todo/ToDoForm/ToDoForm.jsx","components/Todo/TodoList.jsx","components/Todo/TodoFilter.jsx","pages/Todo/Todo.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  overflow: hidden;\n  margin: 0 auto;\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n  border-radius: ${({ theme }) => theme.spacing(4)};\n  background-color: ${({ theme }) => theme.colors.white};\n`;\nexport const CardPoster = styled.img`\n  object-fit: cover;\n`;\n\nexport const CardBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(2)};\n  padding: ${({ theme }) => theme.spacing(4)};\n`;\n\nexport const Tag = styled.span`\n  align-self: flex-start;\n  padding: ${({ theme }) => theme.spacing(2)};\n  border-radius: ${({ theme }) => theme.spacing(4)};\n  font-size: ${({ theme }) => theme.spacing(3)};\n  color: ${({ theme }) => theme.colors.white};\n  background: ${({ theme }) => theme.colors.tagBackground};\n`;\n\nexport const CardTitle = styled.h2`\n  font-size: ${({ theme }) => theme.spacing(6)};\n  text-transform: capitalize;\n`;\n\nexport const CardText = styled.p`\n  font-weight: 200;\n  letter-spacing: 0.8px;\n`;\n\nexport const CardFooter = styled.div`\n  display: flex;\n  padding: ${({ theme }) => theme.spacing(4)};\n  margin-top: auto;\n`;\n\nexport const UserBox = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing(2)};\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n`;\n\nexport const UserName = styled.h3`\n  font-size: 14px;\n  margin-bottom: ${({ theme }) => theme.spacing(1)};\n`;\n\nexport const Date = styled.span`\n  color: ${({ theme }) => theme.colors.gray};\n`;\n","import { formateDateToNow } from 'helpers/formateDate';\nimport {\n  Avatar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardPoster,\n  CardText,\n  CardTitle,\n  Date,\n  Tag,\n  UserBox,\n  UserName,\n} from './BlogCard.styled';\n\nexport const BlogCard = ({\n  name,\n  description,\n  title,\n  poster,\n  tag,\n  avatar,\n  postedAt,\n}) => {\n  return (\n    <Card>\n      <CardPoster src={poster} alt={tag} />\n      <CardBody>\n        <Tag>{tag}</Tag>\n        <CardTitle>{title}</CardTitle>\n        <CardText>{description}</CardText>\n      </CardBody>\n      <CardFooter>\n        <UserBox>\n          <Avatar src={avatar} alt={name} />\n          <div>\n            <UserName>{name}</UserName>\n            <Date>{formateDateToNow(postedAt)}</Date>\n          </div>\n        </UserBox>\n      </CardFooter>\n    </Card>\n  );\n};\n","import { formatDistanceToNow } from 'date-fns';\n\nexport const formateDateToNow = date => {\n  return formatDistanceToNow(new Date(date), { addSuffix: true });\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-top: ${({ theme }) => theme.spacing(5)};\n  padding-left: ${({ theme }) => theme.spacing(5)};\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: ${({ theme }) => theme.spacing(20)};\n  padding-bottom: ${({ theme }) => theme.spacing(10)};\n`;\n","export const StatisticsItem = ({ title, total }) => {\n  return (\n    <li>\n      <p>{title}</p>\n      <p>{total}</p>\n    </li>\n  );\n};\n","import { StatisticsItem } from 'components/Props/StatisticsItem/StatisticsItem';\n\nexport const Statistics = ({ statistics, title }) => {\n  return (\n    <div>\n      {title && <h2>{title}</h2>}\n      <ul>\n        {statistics.map(element => (\n          <StatisticsItem key={element.id} {...element} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTodos } from '../../../redux/selectors';\nimport { addTodo } from '../../../redux/operations';\n\nexport const ToDoForm = ({ text }) => {\n  const [query, setQuery] = useState('');\n\n  const dispatch = useDispatch();\n  const todos = useSelector(selectTodos);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (findTodo(query)) {\n      return;\n    }\n\n    dispatch(addTodo(query));\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setQuery(value);\n  };\n\n  const findTodo = text => {\n    const isExist = todos.find(\n      item => item.text.toLowerCase() === text.toLowerCase()\n    );\n\n    if (isExist) {\n      alert(`Todo: ${text} is already exist`);\n    }\n\n    return isExist;\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n      <label>\n        <input\n          value={query}\n          type=\"text\"\n          name=\"query\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button>{text}</button>\n    </form>\n  );\n};\n","import { RiDeleteBinLine } from 'react-icons/ri';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter, selectTodos } from '../../redux/selectors';\nimport { deleteTodo } from '../../redux/operations';\n\nexport const TodoList = () => {\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const getFilteredTodos = () => {\n    return todos.filter(item =>\n      item.text.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredTodos = getFilteredTodos();\n\n  return (\n    <ul style={{ display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\n      {filteredTodos.map(item => (\n        <li\n          key={item.id}\n          style={{\n            padding: '10px',\n            width: '150px',\n            border: '1px solid black',\n            position: 'relative',\n          }}\n        >\n          <span style={{ display: 'block', marginBottom: '5px' }}>\n            {item.text}\n          </span>\n          <button\n            style={{\n              position: 'absolute',\n              right: 0,\n              top: 0,\n            }}\n            type=\"button\"\n            onClick={() => dispatch(deleteTodo(item.id))}\n          >\n            <RiDeleteBinLine size={16} color={'red'} />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n//  <button\n//    type=\"button\"\n//    style={{\n//      position: 'absolute',\n//      right: 0,\n//      bottom: 0,\n//    }}\n//    disabled={disabled}\n//    onClick={() => onEdit(item)}\n//  >\n//    <RiEdit2Line size={16} color={disabled ? 'grey' : 'lightblue'} />\n//  </button>;\n","import { useDispatch } from 'react-redux';\nimport { filterTodo } from '../../redux/filterSlice';\n\nexport const TodoFilter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <label style={{ marginBottom: '20px' }}>\n      Filter:\n      <input\n        type=\"text\"\n        onChange={event => dispatch(filterTodo(event.target.value))}\n      />\n    </label>\n  );\n};\n","import { TodoList } from 'components/Todo/TodoList';\nimport React, { useEffect } from 'react';\n\nimport { TodoFilter } from 'components/Todo/TodoFilter';\nimport { Container, Section, ToDoForm } from 'components';\nimport { useDispatch } from 'react-redux';\nimport { fetchTodos } from '../../redux/operations';\n\nconst Todo = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n  return (\n    <Section>\n      <Container>\n        <ToDoForm text=\"Add todos\" />\n        <TodoFilter />\n        <TodoList />\n      </Container>\n    </Section>\n  );\n};\n\nexport default Todo;\n","export const selectTodos = state => state.todos;\nexport const selectFilter = state => state.filter;\n"],"names":["Card","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","shadows","regular","_ref2","spacing","_ref3","colors","white","CardPoster","_templateObject2","CardBody","_templateObject3","_ref4","_ref5","Tag","_templateObject4","_ref6","_ref7","_ref8","_ref9","_ref10","tagBackground","CardTitle","_templateObject5","_ref11","CardText","_templateObject6","CardFooter","_templateObject7","_ref12","UserBox","_templateObject8","_ref13","Avatar","_templateObject9","UserName","_templateObject10","_ref14","Date","_templateObject11","_ref15","gray","BlogCard","date","name","description","title","poster","tag","avatar","postedAt","_jsxs","children","_jsx","src","alt","formatDistanceToNow","addSuffix","Container","Section","StatisticsItem","total","Statistics","statistics","map","element","_objectSpread","id","ToDoForm","text","_useState","useState","_useState2","_slicedToArray","query","setQuery","dispatch","useDispatch","todos","useSelector","selectTodos","findTodo","isExist","find","item","toLowerCase","alert","concat","onSubmit","e","preventDefault","addTodo","style","marginBottom","value","type","onChange","target","required","TodoList","filter","selectFilter","filteredTodos","includes","display","gap","flexWrap","padding","width","border","position","right","top","onClick","deleteTodo","RiDeleteBinLine","size","color","TodoFilter","event","filterTodo","useEffect","fetchTodos","state"],"sourceRoot":""}