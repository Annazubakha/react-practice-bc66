{"version":3,"file":"static/js/165.e14526ee.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","components/Todo/EditForm/EditForm.jsx","components/Props/BlogCard/BlogCard.styled.js","components/Props/BlogCard/BlogCard.jsx","helpers/formateDate.js","components/Container/Container.styled.js","components/Section/Section.styled.js","components/Props/StatisticsItem/StatisticsItem.jsx","components/Props/Statistics/Statistics.jsx","components/Todo/ToDoForm/ToDoForm.jsx","components/Todo/TodoListItem.jsx","components/Todo/TodoList.jsx","components/Todo/TodoFilter.jsx","pages/Todo/Todo.jsx","redux/selectors.js"],"sourcesContent":["import { Backdrop } from 'components/Backdrop/Backdrop.styled';\nimport React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modalRoot');\n\nexport const Modal = ({ closeModal, children }) => {\n  useEffect(() => {\n    const handleEscPress = event => {\n      if (event.code === 'Escape') closeModal();\n    };\n    window.addEventListener('keydown', handleEscPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscPress);\n    };\n  }, [closeModal]);\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>{children}</Backdrop>,\n    modalRoot\n  );\n};\n","import { RiSaveLine } from 'react-icons/ri';\nimport { MdOutlineCancel } from 'react-icons/md';\nimport { editTodo } from '../../../redux/operations';\nimport { useDispatch } from 'react-redux';\n\nexport const EditForm = ({ defaultValue, updateTodo, id }) => {\n  const dispatch = useDispatch();\n  const onSubmit = e => {\n    e.preventDefault();\n    const { value } = e.target.elements.text;\n    dispatch(editTodo({ id, text: value }));\n  };\n  console.log(defaultValue);\n  return (\n    <form onSubmit={onSubmit} style={{ marginBottom: 20 }}>\n      <textarea\n        defaultValue={defaultValue}\n        name=\"text\"\n        type=\"text\"\n        style={{ width: '500px', height: '150px', resize: 'none' }}\n        required\n      />\n      <button type=\"submit\">\n        <RiSaveLine size={16} color={'green'} />\n      </button>\n      <button type=\"button\">\n        <MdOutlineCancel size={16} color={'red'} />\n      </button>\n    </form>\n  );\n};\n//  onClick={() => cancelEdit()}\n","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  overflow: hidden;\n  margin: 0 auto;\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n  border-radius: ${({ theme }) => theme.spacing(4)};\n  background-color: ${({ theme }) => theme.colors.white};\n`;\nexport const CardPoster = styled.img`\n  object-fit: cover;\n`;\n\nexport const CardBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(2)};\n  padding: ${({ theme }) => theme.spacing(4)};\n`;\n\nexport const Tag = styled.span`\n  align-self: flex-start;\n  padding: ${({ theme }) => theme.spacing(2)};\n  border-radius: ${({ theme }) => theme.spacing(4)};\n  font-size: ${({ theme }) => theme.spacing(3)};\n  color: ${({ theme }) => theme.colors.white};\n  background: ${({ theme }) => theme.colors.tagBackground};\n`;\n\nexport const CardTitle = styled.h2`\n  font-size: ${({ theme }) => theme.spacing(6)};\n  text-transform: capitalize;\n`;\n\nexport const CardText = styled.p`\n  font-weight: 200;\n  letter-spacing: 0.8px;\n`;\n\nexport const CardFooter = styled.div`\n  display: flex;\n  padding: ${({ theme }) => theme.spacing(4)};\n  margin-top: auto;\n`;\n\nexport const UserBox = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing(2)};\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n`;\n\nexport const UserName = styled.h3`\n  font-size: 14px;\n  margin-bottom: ${({ theme }) => theme.spacing(1)};\n`;\n\nexport const Date = styled.span`\n  color: ${({ theme }) => theme.colors.gray};\n`;\n","import { formateDateToNow } from 'helpers/formateDate';\nimport {\n  Avatar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardPoster,\n  CardText,\n  CardTitle,\n  Date,\n  Tag,\n  UserBox,\n  UserName,\n} from './BlogCard.styled';\n\nexport const BlogCard = ({\n  name,\n  description,\n  title,\n  poster,\n  tag,\n  avatar,\n  postedAt,\n}) => {\n  return (\n    <Card>\n      <CardPoster src={poster} alt={tag} />\n      <CardBody>\n        <Tag>{tag}</Tag>\n        <CardTitle>{title}</CardTitle>\n        <CardText>{description}</CardText>\n      </CardBody>\n      <CardFooter>\n        <UserBox>\n          <Avatar src={avatar} alt={name} />\n          <div>\n            <UserName>{name}</UserName>\n            <Date>{formateDateToNow(postedAt)}</Date>\n          </div>\n        </UserBox>\n      </CardFooter>\n    </Card>\n  );\n};\n","import { formatDistanceToNow } from 'date-fns';\n\nexport const formateDateToNow = date => {\n  return formatDistanceToNow(new Date(date), { addSuffix: true });\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-top: ${({ theme }) => theme.spacing(5)};\n  padding-left: ${({ theme }) => theme.spacing(5)};\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: ${({ theme }) => theme.spacing(20)};\n  padding-bottom: ${({ theme }) => theme.spacing(10)};\n`;\n","export const StatisticsItem = ({ title, total }) => {\n  return (\n    <li>\n      <p>{title}</p>\n      <p>{total}</p>\n    </li>\n  );\n};\n","import { StatisticsItem } from 'components/Props/StatisticsItem/StatisticsItem';\n\nexport const Statistics = ({ statistics, title }) => {\n  return (\n    <div>\n      {title && <h2>{title}</h2>}\n      <ul>\n        {statistics.map(element => (\n          <StatisticsItem key={element.id} {...element} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTodos } from '../../../redux/selectors';\nimport { addTodo } from '../../../redux/operations';\n\nexport const ToDoForm = ({ text }) => {\n  const [query, setQuery] = useState('');\n\n  const dispatch = useDispatch();\n  const todos = useSelector(selectTodos);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (findTodo(query)) {\n      return;\n    }\n\n    dispatch(addTodo(query));\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setQuery(value);\n  };\n\n  const findTodo = text => {\n    const isExist = todos.find(\n      item => item.text.toLowerCase() === text.toLowerCase()\n    );\n\n    if (isExist) {\n      alert(`Todo: ${text} is already exist`);\n    }\n\n    return isExist;\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n      <label>\n        <input\n          value={query}\n          type=\"text\"\n          name=\"query\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button>{text}</button>\n    </form>\n  );\n};\n","import { Modal } from 'components/Modal/Modal';\nimport React, { useState } from 'react';\nimport { RiDeleteBinLine, RiEdit2Line } from 'react-icons/ri';\nimport { EditForm } from './EditForm/EditForm';\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo } from '../../redux/operations';\n\nexport const TodoListItem = ({ id, text }) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const dispatch = useDispatch();\n  return (\n    <li\n      key={id}\n      style={{\n        padding: '10px',\n        width: '150px',\n        border: '1px solid black',\n        position: 'relative',\n      }}\n    >\n      <span style={{ display: 'block', marginBottom: '5px' }}>{text}</span>\n      <button\n        style={{\n          position: 'absolute',\n          right: 0,\n          top: 0,\n        }}\n        disabled={isEdit}\n        type=\"button\"\n        onClick={() => dispatch(deleteTodo(id))}\n      >\n        <RiDeleteBinLine size={16} color={isEdit ? 'grey' : 'red'} />\n      </button>\n      <button\n        type=\"button\"\n        style={{\n          position: 'absolute',\n          right: 0,\n          top: 20,\n        }}\n        disabled={isEdit}\n        onClick={() => setIsEdit(!isEdit)}\n      >\n        <RiEdit2Line size={16} color={isEdit ? 'grey' : 'lightblue'} />\n      </button>\n      {isEdit && (\n        <Modal>\n          <EditForm defaultValue={text} id={id} />\n        </Modal>\n      )}\n    </li>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectFilter, selectTodos } from '../../redux/selectors';\n\nimport { TodoListItem } from './TodoListItem';\n\nexport const TodoList = () => {\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilter);\n\n  const getFilteredTodos = () => {\n    return todos.filter(item =>\n      item.text.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredTodos = getFilteredTodos();\n\n  return (\n    <ul style={{ display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\n      {filteredTodos.map(item => (\n        <TodoListItem key={item.id} {...item} />\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { filterTodo } from '../../redux/filterSlice';\n\nexport const TodoFilter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <label style={{ marginBottom: '20px' }}>\n      Filter:\n      <input\n        type=\"text\"\n        onChange={event => dispatch(filterTodo(event.target.value))}\n      />\n    </label>\n  );\n};\n","import { TodoList } from 'components/Todo/TodoList';\nimport React, { useEffect } from 'react';\n\nimport { TodoFilter } from 'components/Todo/TodoFilter';\nimport { Container, Section, ToDoForm } from 'components';\nimport { useDispatch } from 'react-redux';\nimport { fetchTodos } from '../../redux/operations';\n\nconst Todo = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n  return (\n    <Section>\n      <Container>\n        <ToDoForm text=\"Add todos\" />\n        <TodoFilter />\n        <TodoList />\n      </Container>\n    </Section>\n  );\n};\n\nexport default Todo;\n","export const selectTodos = state => state.todos;\nexport const selectFilter = state => state.filter;\n"],"names":["modalRoot","document","querySelector","Modal","_ref","closeModal","children","useEffect","handleEscPress","event","code","window","addEventListener","removeEventListener","createPortal","_jsx","Backdrop","onClick","target","currentTarget","EditForm","defaultValue","id","updateTodo","dispatch","useDispatch","console","log","_jsxs","onSubmit","e","preventDefault","value","elements","text","editTodo","style","marginBottom","name","type","width","height","resize","required","RiSaveLine","size","color","MdOutlineCancel","Card","styled","_templateObject","_taggedTemplateLiteral","theme","shadows","regular","_ref2","spacing","_ref3","colors","white","CardPoster","_templateObject2","CardBody","_templateObject3","_ref4","_ref5","Tag","_templateObject4","_ref6","_ref7","_ref8","_ref9","_ref10","tagBackground","CardTitle","_templateObject5","_ref11","CardText","_templateObject6","CardFooter","_templateObject7","_ref12","UserBox","_templateObject8","_ref13","Avatar","_templateObject9","UserName","_templateObject10","_ref14","Date","_templateObject11","_ref15","gray","BlogCard","date","description","title","poster","tag","avatar","postedAt","src","alt","formatDistanceToNow","addSuffix","Container","Section","StatisticsItem","total","Statistics","statistics","map","element","_objectSpread","ToDoForm","_useState","useState","_useState2","_slicedToArray","query","setQuery","todos","useSelector","selectTodos","findTodo","isExist","find","item","toLowerCase","alert","concat","addTodo","onChange","TodoListItem","isEdit","setIsEdit","padding","border","position","display","right","top","disabled","deleteTodo","RiDeleteBinLine","RiEdit2Line","TodoList","filter","selectFilter","filteredTodos","includes","gap","flexWrap","TodoFilter","filterTodo","fetchTodos","state"],"sourceRoot":""}