{"version":3,"file":"static/js/165.4d5fd6fd.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","components/Todo/TodoListItem.jsx","components/Todo/TodoList.jsx","components/Todo/TodoFilter.jsx","pages/Todo/Todo.jsx"],"sourcesContent":["import { Backdrop } from 'components/Backdrop/Backdrop.styled';\nimport React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modalRoot');\n\nexport const Modal = ({ closeModal, children }) => {\n  useEffect(() => {\n    const handleEscPress = event => {\n      if (event.code === 'Escape') closeModal();\n    };\n    window.addEventListener('keydown', handleEscPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscPress);\n    };\n  }, [closeModal]);\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>{children}</Backdrop>,\n    modalRoot\n  );\n};\n","import { Modal } from 'components/Modal/Modal';\nimport React, { useState } from 'react';\nimport { RiDeleteBinLine, RiEdit2Line } from 'react-icons/ri';\nimport { EditForm } from './EditForm/EditForm';\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo } from 'myRedux/todos/operations';\n\nexport const TodoListItem = ({ id, text }) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const dispatch = useDispatch();\n  return (\n    <li\n      key={id}\n      style={{\n        padding: '10px',\n        width: '150px',\n        border: '1px solid black',\n        position: 'relative',\n      }}\n    >\n      <span style={{ display: 'block', marginBottom: '5px' }}>{text}</span>\n      <button\n        style={{\n          position: 'absolute',\n          right: 0,\n          top: 0,\n        }}\n        disabled={isEdit}\n        type=\"button\"\n        onClick={() => dispatch(deleteTodo(id))}\n      >\n        <RiDeleteBinLine size={16} color={isEdit ? 'grey' : 'red'} />\n      </button>\n      <button\n        type=\"button\"\n        style={{\n          position: 'absolute',\n          right: 0,\n          top: 20,\n        }}\n        disabled={isEdit}\n        onClick={() => setIsEdit(!isEdit)}\n      >\n        <RiEdit2Line size={16} color={isEdit ? 'grey' : 'lightblue'} />\n      </button>\n      {isEdit && (\n        <Modal>\n          <EditForm defaultValue={text} id={id} cancelEdit={setIsEdit} />\n        </Modal>\n      )}\n    </li>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { TodoListItem } from './TodoListItem';\nimport { selectFilteredTodos } from 'myRedux/todos/selectors';\n\nexport const TodoList = () => {\n  const todos = useSelector(selectFilteredTodos);\n\n  return (\n    <ul style={{ display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\n      {todos.map(item => (\n        <TodoListItem key={item.id} {...item} />\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { filterTodo } from '../../myRedux/todos/filterSlice';\n\nexport const TodoFilter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <label style={{ marginBottom: '20px' }}>\n      Filter:\n      <input\n        type=\"text\"\n        onChange={event => dispatch(filterTodo(event.target.value))}\n      />\n    </label>\n  );\n};\n","import { TodoList } from 'components/Todo/TodoList';\nimport React, { useEffect } from 'react';\n\nimport { TodoFilter } from 'components/Todo/TodoFilter';\nimport { Container, Section, ToDoForm } from 'components';\nimport { useDispatch } from 'react-redux';\nimport { fetchTodos } from 'myRedux/todos/operations';\n\nconst Todo = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n  return (\n    <Section>\n      <Container>\n        <ToDoForm text=\"Add todos\" />\n        <TodoFilter />\n        <TodoList />\n      </Container>\n    </Section>\n  );\n};\n\nexport default Todo;\n"],"names":["modalRoot","document","querySelector","Modal","_ref","closeModal","children","useEffect","handleEscPress","event","code","window","addEventListener","removeEventListener","createPortal","_jsx","Backdrop","onClick","target","currentTarget","TodoListItem","id","text","_useState","useState","_useState2","_slicedToArray","isEdit","setIsEdit","dispatch","useDispatch","_jsxs","style","padding","width","border","position","display","marginBottom","right","top","disabled","type","deleteTodo","RiDeleteBinLine","size","color","RiEdit2Line","EditForm","defaultValue","cancelEdit","TodoList","todos","useSelector","selectFilteredTodos","gap","flexWrap","map","item","_objectSpread","TodoFilter","onChange","filterTodo","value","fetchTodos","Section","Container","ToDoForm"],"sourceRoot":""}