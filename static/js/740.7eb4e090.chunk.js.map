{"version":3,"file":"static/js/740.7eb4e090.chunk.js","mappings":"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","sources":["api/coctails.js","components/CocktailsList/CocktailsList.jsx","components/Form/Form.jsx","pages/SearchCocktails/SearchCocktails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://www.thecocktaildb.com/api/json/v1/1',\n});\n\nconst BASE_URL = '/random.php';\nconst URLS = Array.from({ length: 12 }, () => BASE_URL);\n\nexport const getTrandingCoctails = async () => {\n  const promises = URLS.map(async url => {\n    const { data } = await instance.get(url);\n    return data.drinks[0];\n  });\n  return Promise.all(promises);\n\n  //   const coctails = [];\n  //   for (let i = 0; i < 10; i++) {\n  //     const { data } = await axios.get(BASE_URL);\n  //     coctails.push(data.drinks[0]);\n  //   }\n  //   return coctails;\n};\n\nexport const getCoctailByName = async coctail => {\n  const { data } = await instance.get(`/search.php?s=${coctail}`);\n  return data.drinks;\n};\n\nexport const getCoctailDetails = async id => {\n  const { data } = await instance.get(`/lookup.php?i=${id}`);\n  return data.drinks[0];\n};\n\nexport const getCocktailsIngredients = async id => {\n  const { data } = await instance.get(`/lookup.php?iid=${id}`);\n  return data.ingredients;\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const CocktailsList = ({ cocktails }) => {\n  const location = useLocation();\n  return (\n    <ul style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n      {cocktails.map(({ strDrink, idDrink, strDrinkThumb }) => (\n        <li key={idDrink} style={{ flexBasis: '25%' }}>\n          <Link to={`/searchcocktails/${idDrink}`} state={{ from: location }}>\n            <img src={strDrinkThumb} alt={strDrink} />\n            <h3>{strDrink}</h3>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\n\nexport const Form = ({ addTodo, text }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    addTodo(query);\n\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginBottom: '20px' }}>\n      <label>\n        <input\n          value={query}\n          type=\"text\"\n          name=\"query\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button>{text}</button>\n    </form>\n  );\n};\n","import { getCoctailByName } from 'api/coctails';\nimport { Container, Section } from 'components';\nimport { CocktailsList } from 'components/CocktailsList/CocktailsList';\nimport { Form } from 'components/Form/Form';\nimport { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst SearchCocktails = () => {\n  const [cocktails, setCocktails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const cocktail = searchParams.get('cocktail');\n    if (!cocktail) return;\n    setIsLoading(true);\n    getCoctailByName(cocktail)\n      .then(setCocktails)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [searchParams]);\n\n  const handleSubmit = cocktail => {\n    setSearchParams({ cocktail });\n  };\n  return (\n    <Section>\n      <Container>\n        <Form addTodo={handleSubmit} text={'Search'} />\n        {cocktails?.length > 0 && <CocktailsList cocktails={cocktails} />}\n        {cocktails === null && <p>We don't find any cocktails</p>}\n        {isLoading && <Loader />}\n      </Container>\n    </Section>\n  );\n};\n\nexport default SearchCocktails;\n"],"names":["instance","axios","baseURL","URLS","Array","from","length","getTrandingCoctails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee2","promises","_context2","prev","next","map","_ref2","_callee","url","_yield$instance$get","data","_context","get","sent","abrupt","drinks","stop","_x","apply","arguments","Promise","all","getCoctailByName","_ref3","_callee3","coctail","_yield$instance$get2","_context3","concat","_x2","getCoctailDetails","_ref4","_callee4","id","_yield$instance$get3","_context4","_x3","getCocktailsIngredients","_ref5","_callee5","_yield$instance$get4","_context5","ingredients","_x4","CocktailsList","cocktails","location","useLocation","_jsx","style","display","flexWrap","gap","children","strDrink","idDrink","strDrinkThumb","flexBasis","_jsxs","Link","to","state","src","alt","Form","addTodo","text","_useState","useState","_useState2","_slicedToArray","query","setQuery","onSubmit","e","preventDefault","marginBottom","value","type","name","onChange","target","required","setCocktails","_useState3","_useState4","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","cocktail","then","finally","Section","Container","Loader"],"sourceRoot":""}